[[administration]]
= Administration

[abstract]
--
This section explains how to use Cypher to administer Neo4j databases, such as creating multiple databases, indexes, constraints and security.
--

Neo4j allows the same server to manage multiple databases. The metadata for these databases,
including the associated security model, is maintained in a special database called the `system` database.
Most administrative commands need to be executing against the `system` database because they involve
editing the metadata for the entire system. This includes all commands related to managing multiple databases
as well as all commands for defining the security model: users, roles and privileges. The administrative commands
that are specific to the schema of an individual database are still executed against that specific database.
These include index and constraint management commands.

* <<administration-databases, Databases>>
** <<administration-databases-introduction, Introduction>>
** <<administration-databases-show-databases, Listing databases>>
** <<administration-databases-create-database, Creating databases>>
** <<administration-databases-stop-database, Stopping databases>>
** <<administration-databases-start-database, Starting databases>>
** <<administration-databases-drop-database, Deleting databases>>

* <<administration-indexes, Indexes>>
** <<administration-indexes-introduction, Managing indexes>>
** <<administration-indexes-using-indexes, Using indexes>>
** <<administration-indexes-fulltext-search, Indexes to support full-text search>>

* <<administration-constraints, Constraints>>
** <<administration-constraints-naming, Named constraints>>
** <<administration-constraints-unique-nodes, Unique node property constraints>>
** <<administration-constraints-get-a-list-of-all-constraints-in-the-database, Get a list of all constraints in the database>>
** <<administration-constraints-prop-exist-nodes, Node property existence constraints>>
** <<administration-constraints-prop-exist-rels, Relationship property existence constraints>>
** <<administration-constraints-node-key, Node key constraints>>

* <<administration-security, Security>>
** <<administration-security-introduction, Introduction>>
** <<administration-security-users-and-roles, User and role management>>
** <<administration-security-subgraph, Graph and subgraph access control>>
** <<administration-security-administration, Security of administration>>


include::ql/administration/administration-databases.adoc[leveloffset=+1]

include::ql/administration/indexes/index.asciidoc[leveloffset=+1]

include::ql/administration/constraints/index.asciidoc[leveloffset=+1]

include::ql/administration/security/index.asciidoc[leveloffset=+1]
