[[cypher-schema]]
= Schema

[abstract]
--
This section explains how to work with an optional schema in Neo4j in the Cypher query language.
--

Neo4j 2.0 introduced an optional schema for the graph, based around the concept of labels.
Labels are used in the specification of indexes, and for defining constraints on the graph.
Together, indexes and constraints are the schema of the graph.
Cypher includes data definition language (DDL) statements for manipulating the schema.

* <<query-schema-index,Indexes>>
 ** <<schema-index-create-a-single-property-index, Create a single-property index>>
 ** <<schema-index-get-a-list-of-all-indexes-in-the-database, Get a list of all indexes in the database>>
 ** <<create-a-composite-index, Create a composite index>>
 ** <<schema-index-drop-a-single-property-index, Drop a single-property index>>
 ** <<drop-a-composite-index, Drop a composite index>>
 ** <<schema-index-use-index, Use index>>
 ** <<schema-index-use-a-single-property-index-with-where-using-equality, Use a single-property index with `WHERE` using equality>>
 ** <<use-a-composite-index-with-where-using-equality, Use a composite index with `WHERE` using equality>>
 ** <<schema-index-use-index-with-where-using-range-comparisons, Use index with `WHERE` using range comparisons>>
 ** <<schema-index-use-index-with-in,Use index with `IN`>>
 ** <<schema-index-use-index-with-starts-with, Use index with `STARTS WITH`>>
 ** <<schema-index-use-index-when-checking-for-the-existence-of-a-property, Use index when checking for the existence of a property>>
* <<query-constraints, Constraints>>
 ** <<query-constraint-unique-nodes, Unique node property constraints>>
 ** <<constraints-get-a-list-of-all-constraints-in-the-database, Get a list of all constraints in the database>>
 ** <<query-constraint-prop-exist-nodes, Node property existence constraints>>
 ** <<query-constraint-prop-exist-rels, Relationship property existence constraints>>
 ** <<query-constraint-node-key, Node Keys>>

include::ql/schema-index/index.asciidoc[leveloffset=+1]

include::ql/constraints/index.asciidoc[leveloffset=+1]
