[[query-operators-mathematical]]
= Mathematical operators

The mathematical operators comprise:

* addition: `+`
* subtraction or unary minus: `-`
* multiplication: `*`
* division: `/`
* modulo division: `%`
* exponentiation: `^`

include::using-the-exponentiation-operator.asciidoc[]

include::using-the-unary-minus-operator.asciidoc[]


[[query-operators-comparison]]
= Comparison operators

The comparison operators comprise:

* equality: `=`
* inequality: `<>`
* less than: `<`
* greater than: `>`
* less than or equal to: `\<=`
* greater than or equal to: `>=`
* `IS NULL`
* `IS NOT NULL`


[[query-operator-comparison-string-specific]]
String-specific comparison operators comprise:

* `STARTS WITH`: perform case-sensitive prefix searching on strings
* `ENDS WITH`: perform case-sensitive suffix searching on strings
* `CONTAINS`: perform case-sensitive inclusion searching in strings


include::comparing-two-numbers.asciidoc[]

See <<cypher-comparison>> for more details on the behavior of comparison operators, and <<query-where-ranges>> for more examples showing how these may be used.

include::using-starts-with-to-filter-names.asciidoc[]

<<query-where-string>> contains more information regarding the string-specific comparison operators as well as additional examples illustrating the usage thereof.


[[query-operators-boolean]]
= Boolean operators

The boolean operators -- also known as logical operators -- comprise:

* conjunction: `AND`
* disjunction: `OR`,
* exclusive disjunction: `XOR`
* negation: `NOT`

include::../../syntax/boolean-operator-table.asciidoc[]

include::using-boolean-operators-to-filter-numbers.asciidoc[]


[[query-operators-string]]
= String operators

String operators comprise:

* concatenating strings: `+`
* matching a regular expression: `=~`

include::using-a-regular-expression-to-filter-words.asciidoc[]

Further information and examples regarding the use of regular expressions in filtering can be found in <<query-where-regex>>.
In addition, refer to <<query-operator-comparison-string-specific>> for details on string-specific comparison operators.


[[query-operators-list]]
= List operators

List operators comprise:

* concatenating lists: `+`
* checking if an element exists in a list: `IN`

include::using-in-to-check-if-a-number-is-in-a-list.asciidoc[]

